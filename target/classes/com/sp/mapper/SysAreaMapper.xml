<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sp.dao.SysAreaDao" >
  <resultMap id="BaseResultMap" type="com.sp.entity.SysArea" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="DECIMAL" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
    <result column="parentName" property="parentName" jdbcType="VARCHAR" />
  </resultMap>
  
   <resultMap id="listMap" type="java.util.Map" >
	  <result column="id" property="id" jdbcType="VARCHAR" />
	  <result column="pId" property="pId" jdbcType="VARCHAR" />
	  <result column="name" property="name" jdbcType="VARCHAR" />
	  <result column="parentName" property="parentName" jdbcType="VARCHAR" />
	  
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, parent_id, parent_ids, name, sort, code, type, create_by, create_date, update_by, 
    update_date, remarks, del_flag
  </sql>
   <sql id="Base_Column_List2" >
    id, parent_id, parent_ids, name, sort, code, type, create_by, create_date, update_by, 
    update_date, remarks, del_flag,parentName
  </sql>
  <sql id="dynamicWhere">
		<where>
			<if test="name != null and name != ''">AND name like  '%${name}%' </if>
			<if test="delFlag != null and delFlag != ''">AND del_flag = '${delFlag}' </if>
			<if test="parentIds != null and parentIds != ''">AND parent_ids like  '%${parentIds}%' </if>
			<if test="childrens != null and childrens != ''">AND (parent_ids like  '%${childrens}%' or id='${childrens}') </if>
		</where>
   </sql>
  
  <insert id="insertSysArea" parameterType="com.sp.entity.SysArea" >
    insert into sys_area (id,parent_id, parent_ids, 
      name, sort, code, type, 
      create_by, create_date, update_by, 
      update_date, remarks, del_flag
      )
    values (#{id,jdbcType=VARCHAR},#{parentId,jdbcType=VARCHAR}, #{parentIds,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sort,jdbcType=DECIMAL}, #{code,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR}
      )
  </insert>
  
  <!-- <delete id="deleteSysAreaByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_area  where id = #{id,jdbcType=VARCHAR}
  </delete> -->
  
  <update id="deleteSysAreaByPrimaryKey" parameterType="java.lang.String" >
     update sys_area set  del_flag = '1'  where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <update id="updateSysAreaByPrimaryKey" parameterType="com.sp.entity.SysArea" >
    update sys_area set   
      parent_ids = #{parentIds,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=DECIMAL},
      code = #{code,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectSysAreaByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List2" />
    from (
	    select 
	    id, parent_id, parent_ids, name, sort, code, type, create_by, create_date, update_by, 
	    update_date, remarks, del_flag,(select name from sys_area where id=s.parent_id)parentName 
	    from sys_area s 
    ) sys_area
    where id = #{id,jdbcType=VARCHAR}
  </select>
   
   <!--  获取区域列表 -->
   <select id="getSysAreaListPage" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List2" />
     from (
	    select 
	    id, parent_id, parent_ids, name, sort, code, type, create_by, create_date, update_by, 
	    update_date, remarks, del_flag,(select name from sys_area where id=s.parent_id)parentName 
	    from sys_area s 
    ) sys_area
     <include refid="dynamicWhere" /> 
     <!-- 排序 -->
     <if test="orderField !=null and orderField!=''">
	  order by ${orderField} ${orderSeq}
	 </if>
	 <if test="orderField==null or orderField==''">
	 order by id  desc
	 </if>
	 limit #{startSize},#{pageSize}
   </select>
   
   <!-- 获取区域列表总数 -->
   <select id="getSysAreaListTotalNum" parameterType="java.util.Map" resultType ="java.lang.Integer">
     select  count(id) totalNum  from sys_area <include refid="dynamicWhere" /> 
   </select>
   
   <!-- 获取区域树据 -->
   <select id="getSysAreaTreeData" parameterType="java.util.Map" resultMap="listMap">
   	 	select id, pId, pIds,name,del_flag,parentName,code  from (
		SELECT S.id,S.parent_id as pId,S.parent_ids as pIds,S.name,Y.NAME AS parentName,S.del_flag,s.code FROM 
		sys_area S LEFT JOIN sys_area Y ON S.parent_id = Y.id
		)sys_area 
 		<include refid="dynamicWhere" /> 
   </select>
   
   <!-- 获取区域列表 -->
   <select id="getSysAreaList" parameterType="java.util.Map" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_area
     <include refid="dynamicWhere" /> 
   </select>
    <!-- 根据主键ID删除其本身以及其下属区域 -->
   <update id="delChildrenById" parameterType="java.util.Map" >
     update sys_area set  del_flag = '1'  where  parent_ids like '%${id}%' or id='${id}'
  </update>
   
</mapper>