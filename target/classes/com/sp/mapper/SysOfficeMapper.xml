<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sp.dao.SysOfficeDao" >
  <resultMap id="BaseResultMap" type="com.sp.entity.SysOffice" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="DECIMAL" />
    <result column="area_id" property="areaId" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="grade" property="grade" jdbcType="CHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="zip_code" property="zipCode" jdbcType="VARCHAR" />
    <result column="master" property="master" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="fax" property="fax" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="USEABLE" property="useable" jdbcType="VARCHAR" />
    <result column="PRIMARY_PERSON" property="primaryPerson" jdbcType="VARCHAR" />
    <result column="DEPUTY_PERSON" property="deputyPerson" jdbcType="VARCHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="del_flag" property="delFlag" jdbcType="CHAR" />
    <result column="parentName" property="parentName" jdbcType="VARCHAR" />
    <result column="areaName" property="areaName" jdbcType="VARCHAR" />
    
  </resultMap>
  
  <resultMap id="listMap" type="java.util.Map" >
  <result column="id" property="id" jdbcType="VARCHAR" />
  <result column="parent_id" property="pId" jdbcType="VARCHAR" />
  <result column="name" property="name" jdbcType="VARCHAR" />
  <result column="parentName" property="parentName" jdbcType="VARCHAR" />
  <result column="del_flag" property="delFlag" jdbcType="CHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, parent_id, parent_ids, name, sort, area_id, code, type, grade, address, zip_code, 
    master, phone, fax, email, USEABLE, PRIMARY_PERSON, DEPUTY_PERSON, create_by, create_date, 
    update_by, update_date, remarks, del_flag 
  </sql>
   
   <sql id="dynamicWhere">
		<where>
			<if test="id != null and id != ''">AND id =#{id} </if>
			<if test="name != null and name != ''">AND name = #{name} </if>
			<if test="delFlag != null and delFlag != ''">AND del_flag = '${delFlag}' </if>
			<if test="childrens != null and childrens != ''">AND (find_in_set('${childrens}',SUBSTRING(parent_ids,1,(LENGTH(parent_ids)-1)))>0 or id='${childrens}') </if>
		</where>
   </sql>
   
   <!-- 获取分页列表 -->
    <select id="getSysOfficListPage"  parameterType="java.util.Map" resultMap="BaseResultMap">
  	 select 
    <include refid="Base_Column_List" />,parentName,areaName
    from (
     select  <include refid="Base_Column_List" />,
     (select name from sys_office where id=s.parent_id ) parentName,
     (select name from sys_area where id=s.area_id ) areaName 
     from sys_office  s
    )sys_office
     <include refid="dynamicWhere" /> 
     <!-- 排序 -->
     <if test="orderField !=null and orderField!=''">
	  order by ${orderField} ${orderSeq}
	 </if>
	 <if test="orderField==null or orderField==''">
	 order by id  desc
	 </if>
	 limit #{startSize},#{pageSize}
  </select>
   <!-- 获取总数 -->
   <select id="getSysOfficListTotalNum"  parameterType="java.util.Map" resultType ="java.lang.Integer" >
  	 select  count(id) totalNum  from sys_office <include refid="dynamicWhere" /> 
  </select>
   
   
  <!-- 根据主键id获取SysOffice对象 -->
  <select id="selectSysOfficeByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />,parentName,areaName
    from (
     select  <include refid="Base_Column_List" />,
     (select name from sys_office where id=s.parent_id ) parentName , 
     (select name from sys_area where id=s.area_id ) areaName
     from sys_office  s
    )sys_office
    where id = #{id,jdbcType=VARCHAR}
  </select>
  
   <!-- 插入SysOffice对象 -->
  <insert id="insertSysOffice" parameterType="com.sp.entity.SysOffice" >
    insert into sys_office (id,parent_id, parent_ids, 
      name, sort, area_id, 
      code, type, grade, address, 
      zip_code, master, phone, 
      fax, email, USEABLE, 
      PRIMARY_PERSON, DEPUTY_PERSON, create_by, 
      create_date, update_by, update_date, 
      remarks, del_flag)
    values (#{id,jdbcType=VARCHAR},#{parentId,jdbcType=VARCHAR}, #{parentIds,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sort,jdbcType=DECIMAL}, #{areaId,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{type,jdbcType=CHAR}, #{grade,jdbcType=CHAR}, #{address,jdbcType=VARCHAR}, 
      #{zipCode,jdbcType=VARCHAR}, #{master,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{fax,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{useable,jdbcType=VARCHAR}, 
      #{primaryPerson,jdbcType=VARCHAR}, #{deputyPerson,jdbcType=VARCHAR}, #{createBy,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR}, #{delFlag,jdbcType=CHAR})
  </insert>
  <!-- 修改SysOffice对象 -->
  <update id="updateSysOffice" parameterType="com.sp.entity.SysOffice" >
    update sys_office
    set parent_id = #{parentId,jdbcType=VARCHAR},
      parent_ids = #{parentIds,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sort = #{sort,jdbcType=DECIMAL},
      area_id = #{areaId,jdbcType=VARCHAR},
      code = #{code,jdbcType=VARCHAR},
      type = #{type,jdbcType=CHAR},
      grade = #{grade,jdbcType=CHAR},
      address = #{address,jdbcType=VARCHAR},
      zip_code = #{zipCode,jdbcType=VARCHAR},
      master = #{master,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      USEABLE = #{useable,jdbcType=VARCHAR},
      PRIMARY_PERSON = #{primaryPerson,jdbcType=VARCHAR},
      DEPUTY_PERSON = #{deputyPerson,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=CHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  
  <!-- 删除SysOffice对象 -->
   <update id="deleteSysOfficeByPrimaryKey" parameterType="java.lang.String" >
    update sys_office   set    del_flag = '1' where id = #{id,jdbcType=VARCHAR}
  </update>
   <!-- 删除SysOffice对象根据主键 -->
  <delete id="deleteSysOfficeByPrimaryKeyRel" parameterType="java.lang.String" >
    delete from sys_office where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <!-- 获取组织机构树据 -->
  <select id="getSysOfficeTreeData"  parameterType="java.util.Map" resultMap="listMap">
  	select id,pId,pIds,name,parentName,del_flag   from 
( select id,parent_id as pId,parent_ids as pIds,name,(select name from sys_office where id=s.parent_id ) parentName,del_flag  from sys_office  s) sys_office
  	<include refid="dynamicWhere" /> 
  </select>
  <!-- 获取组织机构列表 -->
  <select id="getSysOfficeList"  parameterType="java.util.Map" resultMap="BaseResultMap">
   select 
    <include refid="Base_Column_List" />,parentName,areaName
    from (
     select  <include refid="Base_Column_List" />,
     (select name from sys_office where id=s.parent_id ) parentName , 
     (select name from sys_area where id=s.area_id ) areaName
     from sys_office  s
    )sys_office 
    <include refid="dynamicWhere" /> 
  </select>
  
     <!-- 根据主键ID删除其本身以及其下属区域 -->
   <update id="deleteSysOfficeAndChildrenById" parameterType="java.util.Map" >
     update sys_office set  del_flag = '1'  where  parent_ids like '%${id}%' or id='${id}'
  </update>
</mapper>